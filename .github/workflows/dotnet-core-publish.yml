name: .NET Build, Test and Publish

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Setup package source
      run: dotnet nuget add source https://nuget.pkg.github.com/EclipseTrading/index.json -n github -u EclipseTrading -p ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
    - name: Install dependencies
      working-directory: src
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore /p:Version=${{ env.RELEASE_VERSION }}
      working-directory: src
    - name: Test
      working-directory: src
      run: dotnet test --no-restore --verbosity normal
    - name: Pack NuGet
      working-directory: src
      run: dotnet pack --configuration Release /p:Version=${{ env.RELEASE_VERSION }}
    - name: Push NuGet - VCEL.Core
      working-directory: src
      run: dotnet nuget push -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json VCEL.Core/bin/Release/VCEL.Core.${{ env.RELEASE_VERSION }}.nupkg
    - name: Push NuGet - VCEL.JS
      working-directory: src
      run: dotnet nuget push -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json VCEL.JS/bin/Release/VCEL.JS.${{ env.RELEASE_VERSION }}.nupkg
    - name: Push NuGet - VCEL.CSharp
      working-directory: src
      run: dotnet nuget push -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json VCEL.CSharp/bin/Release/VCEL.CSharp.${{ env.RELEASE_VERSION }}.nupkg
    - name: Push NuGet - VCEL.Cli
      working-directory: src
      run: dotnet nuget push -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json VCEL.Cli/bin/Release/VCEL.Cli.${{ env.RELEASE_VERSION }}.nupkg
    - name: Push GitHub Packages - VCEL.Core
      working-directory: src
      run: dotnet nuget push VCEL.Core/bin/Release/VCEL.Core.${{ env.RELEASE_VERSION }}.nupkg --source "github"
    - name: Push GitHub Packages - VCEL.JS
      working-directory: src
      run: dotnet nuget push VCEL.JS/bin/Release/VCEL.JS.${{ env.RELEASE_VERSION }}.nupkg --source "github"
    - name: Push GitHub Packages - VCEL.CSharp
      working-directory: src
      run: dotnet nuget push VCEL.CSharp/bin/Release/VCEL.CSharp.${{ env.RELEASE_VERSION }}.nupkg --source "github"
    - name: Push GitHub Packages - VCEL.Cli
      working-directory: src
      run: dotnet nuget push VCEL.Cli/bin/Release/VCEL.Cli.${{ env.RELEASE_VERSION }}.nupkg --source "github"
